Microsoft Windows [Version 10.0.18363.1082]
(c) 2019 Microsoft Corporation. All rights reserved.

D:\Git_Project\2020-2\computer_vision> cmd /C "c:\Users\Woo\.conda\envs\20-2_CV\python.exe c:\Users\Woo\.vscode\extensions\ms-python.python-2020.9.111407\pythonFiles\lib\python\debugpy\launcher 52093 -- d:\Git_Project\2020-2\computer_vision\image_classification.py "

 load dataset ...

 train start ...
2020-09-27 17:39:55.956990: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN)to use the following CPU instructions in performance-critical operations:  AVX2
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2020-09-27 17:39:55.978630: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x25e69bd8a50 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-09-27 17:39:55.987264: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #
=================================================================
dense_layer (Dense)          (None, 128)               100480
_________________________________________________________________
dropout (Dropout)            (None, 128)               0
_________________________________________________________________
dense_layer_2 (Dense)        (None, 128)               16512
_________________________________________________________________
dropout_1 (Dropout)          (None, 128)               0
_________________________________________________________________
dense_layer_3 (Dense)        (None, 10)                1290
=================================================================
Total params: 118,282
Trainable params: 118,282
Non-trainable params: 0
_________________________________________________________________
*****************
        batch size : 32
        epochs : 20
        optimizer : <tensorflow.python.keras.optimizer_v2.adam.Adam object at 0x0000025E6FE7AAC8>
        learning rate : 0.001
*****************
Epoch 1/20
2/2 - 0s - loss: 2.4053 - accuracy: 0.1000 - val_loss: 2.1579 - val_accuracy: 0.2750
Epoch 2/20
2/2 - 0s - loss: 2.0944 - accuracy: 0.2500 - val_loss: 2.1197 - val_accuracy: 0.3000
Epoch 3/20
2/2 - 0s - loss: 1.9716 - accuracy: 0.2667 - val_loss: 2.0418 - val_accuracy: 0.4000
Epoch 4/20
2/2 - 0s - loss: 1.8589 - accuracy: 0.4167 - val_loss: 1.9161 - val_accuracy: 0.3500
Epoch 5/20
2/2 - 0s - loss: 1.6656 - accuracy: 0.5167 - val_loss: 1.7943 - val_accuracy: 0.4250
Epoch 6/20
2/2 - 0s - loss: 1.5375 - accuracy: 0.4667 - val_loss: 1.6909 - val_accuracy: 0.4250
Epoch 7/20
2/2 - 0s - loss: 1.5202 - accuracy: 0.5333 - val_loss: 1.5997 - val_accuracy: 0.4750
Epoch 8/20
2/2 - 0s - loss: 1.4895 - accuracy: 0.5500 - val_loss: 1.5110 - val_accuracy: 0.4500
Epoch 9/20
2/2 - 0s - loss: 1.3309 - accuracy: 0.5167 - val_loss: 1.4323 - val_accuracy: 0.4750
Epoch 10/20
2/2 - 0s - loss: 1.2329 - accuracy: 0.5167 - val_loss: 1.3679 - val_accuracy: 0.5000
Epoch 11/20
2/2 - 0s - loss: 1.1255 - accuracy: 0.7000 - val_loss: 1.3079 - val_accuracy: 0.5000
Epoch 12/20
2/2 - 0s - loss: 1.0948 - accuracy: 0.6000 - val_loss: 1.2412 - val_accuracy: 0.4500
Epoch 13/20
2/2 - 0s - loss: 0.9346 - accuracy: 0.7500 - val_loss: 1.1738 - val_accuracy: 0.5000
Epoch 14/20
2/2 - 0s - loss: 1.0989 - accuracy: 0.6000 - val_loss: 1.1177 - val_accuracy: 0.5750
Epoch 15/20
2/2 - 0s - loss: 0.9540 - accuracy: 0.6833 - val_loss: 1.0952 - val_accuracy: 0.5750
Epoch 16/20
2/2 - 0s - loss: 0.9556 - accuracy: 0.6333 - val_loss: 1.0678 - val_accuracy: 0.5750
Epoch 17/20
2/2 - 0s - loss: 0.7996 - accuracy: 0.7167 - val_loss: 1.0626 - val_accuracy: 0.5250
Epoch 18/20
2/2 - 0s - loss: 0.8254 - accuracy: 0.7500 - val_loss: 1.0411 - val_accuracy: 0.5000
Epoch 19/20
2/2 - 0s - loss: 0.8221 - accuracy: 0.7167 - val_loss: 0.9880 - val_accuracy: 0.5250
Epoch 20/20
2/2 - 0s - loss: 0.6736 - accuracy: 0.7500 - val_loss: 0.9431 - val_accuracy: 0.6750

save model : "saves/model.h5"

test model
313/313 [==============================] - 0s 913us/step - loss: 1.0769 - accuracy: 0.5935
4/4 [==============================] - 0s 999us/step - loss: 0.6715 - accuracy: 0.8100
test dataset result :  0.593500018119812
train dataset result :  0.8100000023841858

visualize results : "saves/result.png"

D:\Git_Project\2020-2\computer_vision>activate 20-2_CV

(20-2_CV) D:\Git_Project\2020-2\computer_vision>